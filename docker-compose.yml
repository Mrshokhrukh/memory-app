version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: memoryscape-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: memoryscape
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - '27017:27017'
    networks:
      - memoryscape-network

  redis:
    image: redis:7-alpine
    container_name: memoryscape-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    networks:
      - memoryscape-network

  backend:
    build: ./server
    container_name: memoryscape-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb+srv://shokhrukhdot:shokhrukhabduvokhidov-memoryspace2025@cluster0.bqmwxzk.mongodb.net/memoryscape?retryWrites=true&w=majority&appName=Cluster0
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRE: ${JWT_EXPIRE}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      CLIENT_URL: ${CLIENT_URL}
    ports:
      - '5001:5000'
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - memoryscape-network

  frontend:
    build: ./client
    container_name: memoryscape-frontend
    restart: unless-stopped
    ports:
      - '80:80'
    depends_on:
      - backend
    networks:
      - memoryscape-network

volumes:
  mongodb_data:
  redis_data:

networks:
  memoryscape-network:
    driver: bridge
